buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}
 
apply plugin: 'forge'
apply plugin: 'maven'

ext.buildProps = file "build.properties"
 
buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}
 
group = "icbm"
archivesBaseName = "ICBM"
 
minecraft {
    version = "${rootProject.config.version.minecraft}-${rootProject.config.version.forge}"
    
    replaceIn "Reference.java"
    replace "@MAJOR@", rootProject.config.version.mod.major
    replace "@MINOR@", rootProject.config.version.mod.minor
    replace "@REVIS@", rootProject.config.version.mod.revis
    replace "@BUILD@", System.getenv("BUILD_NUMBER")
}
 
allprojects {
    apply plugin: 'java'
    
    version = "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    
    if (System.getenv("BUILD_NUMBER") != null)
        version += ".${System.getenv("BUILD_NUMBER")}"
        
    repositories {
        maven {
            name 'Calclavia Maven'
            url 'http://calclavia.com/maven'
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        mavenCentral()
    }
    
    dependencies {
        compile group: 'universalelectricity', name: 'Universal-Electricity', version: "${rootProject.config.version.universalelectricity}", classifier: "dev"
        compile group: 'calclaviacore', name: 'calclavia-core', version: "${rootProject.config.version.calclaviacore}", classifier: "dev"
    }
    
    jar {
        dependsOn ":copyBuildXml"
        destinationDir = file 'output'
    }
}
 
subprojects {
    archivesBaseName = "ICBM-${project.name}"
    
    dependencies {
        compile rootProject
    }
}
 
processResources {
	from 'build.properties'
}
 
task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}
 
task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'icbm/api/**'
    destinationDir = file 'output'
}
 
artifacts {
    archives apiZip
}

task copyBuilds(type: Copy) {
  dependsOn "apiZip"
  
  doLast {
	  from projectDir
	  include '**/output/*.jar'
	  into 'output'
  }
}

build.dependsOn "apiZip", "copyBuildXML", "apiZip", "copyBuilds"